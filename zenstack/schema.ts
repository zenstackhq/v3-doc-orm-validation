//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

/* eslint-disable */

import { type SchemaDef, ExpressionUtils } from "@zenstackhq/runtime/schema";
export const schema = {
    provider: {
        type: "sqlite"
    },
    models: {
        User: {
            name: "User",
            fields: {
                id: {
                    name: "id",
                    type: "Int",
                    id: true,
                    attributes: [{ name: "@id" }, { name: "@default", args: [{ name: "value", value: ExpressionUtils.call("autoincrement") }] }],
                    default: ExpressionUtils.call("autoincrement")
                },
                email: {
                    name: "email",
                    type: "String",
                    unique: true,
                    attributes: [{ name: "@unique" }, { name: "@email" }, { name: "@length", args: [{ name: "min", value: ExpressionUtils.literal(5) }, { name: "max", value: ExpressionUtils.literal(80) }] }]
                },
                age: {
                    name: "age",
                    type: "Int",
                    attributes: [{ name: "@gte", args: [{ name: "value", value: ExpressionUtils.literal(0) }] }, { name: "@lt", args: [{ name: "value", value: ExpressionUtils.literal(150) }] }]
                },
                role: {
                    name: "role",
                    type: "Role"
                }
            },
            attributes: [
                { name: "@@validate", args: [{ name: "value", value: ExpressionUtils.binary(ExpressionUtils.binary(ExpressionUtils.field("role"), "!=", ExpressionUtils.literal("ADMIN")), "||", ExpressionUtils.binary(ExpressionUtils.field("age"), ">=", ExpressionUtils.literal(18))) }, { name: "message", value: ExpressionUtils.literal("Admin must be an adult") }] },
                { name: "@@validate", args: [{ name: "value", value: ExpressionUtils.binary(ExpressionUtils.binary(ExpressionUtils.field("role"), "!=", ExpressionUtils.literal("ADMIN")), "||", ExpressionUtils.call("endsWith", [ExpressionUtils.field("email"), ExpressionUtils.literal("zenstack.dev")])) }, { name: "message", value: ExpressionUtils.literal("Admin must have a zenstack email") }] }
            ],
            idFields: ["id"],
            uniqueFields: {
                id: { type: "Int" },
                email: { type: "String" }
            }
        }
    },
    enums: {
        Role: {
            USER: "USER",
            ADMIN: "ADMIN"
        }
    },
    authType: "User",
    plugins: {}
} as const satisfies SchemaDef;
export type SchemaType = typeof schema;
